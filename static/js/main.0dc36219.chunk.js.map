{"version":3,"sources":["common/UserContext.tsx","components/NavLink.tsx","components/UserPopupNavigation.tsx","components/SpecialistPopupPanelNavigation.tsx","components/Navbar.tsx","pages/Home.tsx","components/Copyrights.tsx","components/SignIn.tsx","pages/Login.tsx","utils/resetUserStorage.ts","pages/Logout.tsx","components/useOwnerCheck.tsx","pages/Owner.tsx","components/SignUp.tsx","pages/Register.tsx","components/Container.tsx","assets/doctor.png","assets/dentist.png","assets/vet.jpg","utils/getJobNameAndPhotoFromEnum.ts","components/PersonCard.tsx","components/SpecialistsGrid.tsx","pages/Specialists.tsx","pages/Unauthorized.tsx","pages/SpecialistAddVisit.tsx","components/SpecialistTable.tsx","pages/SpecialistsList.tsx","components/SignUpSpecialist.tsx","pages/OwnerAddSpecialist.tsx","utils/getDay.ts","pages/SpecialistVisits.tsx","pages/SpecialistRemoveVisits.tsx","pages/UserSpecialistVisits.tsx","pages/UserReservations.tsx","components/Navigation.tsx","components/UserContextUpdate.tsx","App.tsx","utils/axiosInterceptor.ts","index.tsx"],"names":["initData","id","firstName","lastName","phone","role","email","token","UserContext","createContext","user","setUser","NavLink","to","children","marginRight","disableActiveStyles","exact","style","activeStyle","fontWeight","color","textUnderlineOffset","textDecoration","UserPopupNavigation","userContext","useContext","variant","popupId","popupState","name","size","round","bindTrigger","Menu","bindMenu","MenuItem","SpecialistPopupPanelNavigation","Navbar","fontFamily","Home","localStorage","getItem","useState","showPasswords","setShowPasswords","error","setError","Box","component","onSubmit","event","preventDefault","checkedPassword","FormData","currentTarget","get","toString","moment","format","noValidate","sx","mt","TextField","margin","required","fullWidth","type","label","autoFocus","Button","mb","backgroundColor","Copyright","props","Typography","align","Link","href","Date","getFullYear","theme","createTheme","SignIn","open","setOpen","severity","setSeverity","message","setMessage","routerHistory","useHistory","handleClose","loginMutation","useMutation","loginUser","axios","post","onSuccess","data","setItem","push","pathname","state","isSuccess","onError","ThemeProvider","maxWidth","Snackbar","autoHideDuration","onClose","Alert","width","marginTop","display","flexDirection","alignItems","Avatar","m","bgcolor","htmlColor","formData","mutate","password","autoComplete","disabled","isLoading","Grid","container","item","Login","resetUserStorage","Logout","useEffect","clearUserContext","useOwnerCheck","useLayoutEffect","console","log","window","location","Owner","SignUp","firstNameError","setFirstNameError","lastNameError","setLastNameError","phoneError","setPhoneError","passwordError","setPasswordError","passwordRepeatedError","setPasswordRepeatedError","emailError","setEmailError","firstNameHelperText","setFirstNameHelperText","setLastNameHelperText","phoneHelperText","setPhoneHelperText","passwordHelperText","setPasswordHelperText","passwordRepeatedHelperText","setPasswordRepeatedHelperText","emailHelperText","setEmailHelperText","validation","passwordRepeated","telephone","length","match","registerMutation","newUser","res","err","request","status","spacing","xs","sm","helperText","justifyContent","Register","overflow","Container","marginHorizontal","marginBottom","marginLeft","getJobNameAndPhotoFromEnum","job","img","dentist","doctor","vet","PersonCard","proportion","Card","padding","CardMedia","height","image","alt","maxHeight","CardContent","paddingBottom","gutterBottom","CardActions","onClick","SpecialistsGrid","map","specialist","md","lg","justifySelf","jobName","userId","Specialists","useQuery","then","Unauthorized","SpecialistAddVisit","startDateValue","setStartDateValue","endDateValue","setEndDateValue","startTimeValue","setStartTimeValue","endTimeValue","setEndTimeValue","visitName","setVisitName","duration","setDuration","errorMessage","setErrorMessage","createVisitsFromToMutation","reservationData","JSON","stringify","response","msg","LocalizationProvider","dateAdapter","AdapterDateFns","locale","pl","value","onChange","newValue","target","DatePicker","minDate","renderInput","params","TimePicker","Select","parseInt","date_start","date_end","time_start","time_end","palette","primary","main","plPL","coreplPL","columns","field","headerName","flex","renderCell","openModal","setOpenModal","queryClient","useQueryClient","deleteMutation","delete","invalidateQueries","Modal","position","top","left","transform","border","boxShadow","p","sortable","SpecialistTable","rows","disableColumnMenu","disableExtendRowFullWidth","pageSize","rowsPerPageOptions","disableSelectionOnClick","autoHeight","SpecialistsList","setRows","SignUpSpecialist","redirect","React","setJob","showToast","InputLabel","autoWidth","OwnerAddSpecialist","getDay","d","SpecialistVisits","weekOffset","setWeekOffset","groupedDays","setGroupedDays","groupedDaysKeys","setGroupedDaysKeys","offset","grouped","i","forEach","e","datetime_start","day","Array","from","Object","keys","refetchInterval","isFetching","isRefetching","removeVisitMutation","removeData","cancelVisitMutation","IconButton","dayOfWeek","Accordion","AccordionSummary","expandIcon","fontSize","filter","reservation_status","AccordionDetails","List","reservation","j","ListItem","secondaryAction","ListItemText","secondaryTypographyProps","datetime_end","secondary","timestamp","SpecialistRemoveVisits","removeVisitsFromToMutation","UserSpecialistVisits","reserveVisitMutation","reserveData","put","client_id","UserReservations","Navigation","path","UserContextUpdate","enabled","QueryClient","App","client","colors","Provider","defaults","baseURL","interceptors","use","Promise","reject","config","headers","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0dc36219.chunk.js","sourcesContent":["/* eslint-disable no-unused-vars */\r\n/* eslint-disable @typescript-eslint/no-unused-vars */\r\n/* eslint-disable @typescript-eslint/no-empty-function */\r\nimport { createContext, useContext, useEffect } from 'react'\r\nimport { userContextModel } from '../models/userContextModel'\r\n\r\nexport const initData = {\r\n  id: 0,\r\n  firstName: '',\r\n  lastName: '',\r\n  phone: '',\r\n  role: '',\r\n  email: '',\r\n  token: '',\r\n}\r\n\r\nconst UserContext = createContext({\r\n  user: initData,\r\n  setUser: (user: userContextModel) => {},\r\n})\r\n\r\nexport const clearUserContext = () => {\r\n  const userContext = useContext(UserContext)\r\n  useEffect(() => {\r\n    userContext.setUser(initData)\r\n  }, [])\r\n}\r\n\r\nexport default UserContext\r\n","import React, { ReactNode } from 'react'\r\nimport { NavLink as NavLinkRouter } from 'react-router-dom'\r\n/** @jsxImportSource @emotion/react */\r\nimport 'twin.macro'\r\ninterface NavLinkProps {\r\n  to: string\r\n  children: ReactNode\r\n  marginRight?: number\r\n  disableActiveStyles?: boolean\r\n  exact?: boolean\r\n}\r\n\r\nconst NavLink = ({\r\n  to,\r\n  children,\r\n  marginRight = 13,\r\n  disableActiveStyles,\r\n  exact = true,\r\n}: NavLinkProps) => {\r\n  return (\r\n    <NavLinkRouter\r\n      style={{ marginRight: marginRight }}\r\n      to={to}\r\n      activeStyle={\r\n        !disableActiveStyles\r\n          ? {\r\n              fontWeight: 'bold',\r\n              color: 'white',\r\n              textUnderlineOffset: 6,\r\n              textDecoration: 'underline',\r\n            }\r\n          : {}\r\n      }\r\n      tw=\"transform hover:(scale-110) transition-duration[250ms]\"\r\n      exact={exact}\r\n    >\r\n      {children}\r\n    </NavLinkRouter>\r\n  )\r\n}\r\nexport default NavLink\r\n","import { Menu, MenuItem } from '@mui/material'\r\nimport PopupState, { bindMenu, bindTrigger } from 'material-ui-popup-state'\r\nimport React, { useContext } from 'react'\r\nimport Avatar from 'react-avatar'\r\nimport UserContext from '../common/UserContext'\r\nimport NavLink from './NavLink'\r\n/** @jsxImportSource @emotion/react */\r\nimport 'twin.macro'\r\n\r\nconst UserPopupNavigation = () => {\r\n  const userContext = useContext(UserContext)\r\n  return (\r\n    <PopupState variant=\"popover\" popupId=\"demo-popup-menu\">\r\n      {(popupState) => (\r\n        <>\r\n          <Avatar\r\n            name={userContext.user.firstName + ' ' + userContext.user.lastName}\r\n            size=\"25\"\r\n            tw=\"mr-2 hover:(scale-110) cursor-pointer\"\r\n            round\r\n            {...bindTrigger(popupState)}\r\n          />\r\n\r\n          <Menu {...bindMenu(popupState)}>\r\n            <NavLink marginRight={0} to=\"/logout\">\r\n              <MenuItem>Wyloguj</MenuItem>\r\n            </NavLink>\r\n          </Menu>\r\n        </>\r\n      )}\r\n    </PopupState>\r\n  )\r\n}\r\n\r\nexport default UserPopupNavigation\r\n","import { Menu } from '@mui/material'\r\nimport PopupState, { bindMenu, bindTrigger } from 'material-ui-popup-state'\r\nimport React, { ReactNode } from 'react'\r\n/** @jsxImportSource @emotion/react */\r\nimport 'twin.macro'\r\n\r\ninterface SpecialistPopupPanelNavigationProps {\r\n  children: ReactNode\r\n}\r\n\r\nconst SpecialistPopupPanelNavigation = ({ children }: SpecialistPopupPanelNavigationProps) => {\r\n  return (\r\n    <PopupState variant=\"popover\" popupId=\"demo-popup-menu\">\r\n      {(popupState) => (\r\n        <>\r\n          <p\r\n            tw=\"transform hover:(scale-110) transition-duration[250ms] cursor-pointer\"\r\n            {...bindTrigger(popupState)}\r\n          >\r\n            Panel\r\n          </p>\r\n          <Menu {...bindMenu(popupState)}>{children}</Menu>\r\n        </>\r\n      )}\r\n    </PopupState>\r\n  )\r\n}\r\n\r\nexport default SpecialistPopupPanelNavigation\r\n","import React, { useContext } from 'react'\r\n\r\nimport UserContext from '../common/UserContext'\r\n/** @jsxImportSource @emotion/react */\r\nimport 'twin.macro'\r\nimport NavLink from './NavLink'\r\nimport UserPopupNavigation from './UserPopupNavigation'\r\nimport SpecialistPopupPanelNavigation from './SpecialistPopupPanelNavigation'\r\nimport { MenuItem } from '@mui/material'\r\n\r\nfunction Navbar() {\r\n  const userContext = useContext(UserContext)\r\n  return (\r\n    <div>\r\n      <div\r\n        style={{ fontFamily: 'Allerta Stencil' }}\r\n        tw=\"bg-blue-800 text-white font-size[30px] pt-5 pb-5 pl-3 pr-3 text-center \"\r\n      >\r\n        SYSTEM REZERWACJI TERMINÓW WIZYT\r\n      </div>\r\n      <div tw=\"bg-blue-800 text-white pb-5 pl-3 pr-3 flex mb-5\">\r\n        <div tw=\"flex\">\r\n          <NavLink to=\"/\">Główna</NavLink>\r\n          {!userContext.user.firstName && <NavLink to=\"/register\">Rejestracja</NavLink>}\r\n          {userContext.user.firstName && <NavLink to=\"/specialists\">Specjaliści</NavLink>}\r\n          {userContext.user.role === 'client' && (\r\n            <NavLink to=\"/user-reservations\">Rezerwacje</NavLink>\r\n          )}\r\n        </div>\r\n        {userContext.user.role === 'owner' && (\r\n          <SpecialistPopupPanelNavigation>\r\n            <>\r\n              <NavLink disableActiveStyles marginRight={0} to=\"/specialists-list\">\r\n                <MenuItem>Lista specjalistów</MenuItem>\r\n              </NavLink>\r\n              <NavLink disableActiveStyles marginRight={0} to=\"/specialist-add\">\r\n                <MenuItem>Dodaj specjalistę</MenuItem>\r\n              </NavLink>\r\n            </>\r\n          </SpecialistPopupPanelNavigation>\r\n        )}\r\n        {userContext.user.role === 'specialist' && (\r\n          <SpecialistPopupPanelNavigation>\r\n            <>\r\n              <NavLink disableActiveStyles marginRight={0} to=\"/add-visit\">\r\n                <MenuItem>Dodaj wizytę</MenuItem>\r\n              </NavLink>\r\n              <NavLink disableActiveStyles marginRight={0} to=\"/show-visits\">\r\n                <MenuItem>Pokaż wizyty</MenuItem>\r\n              </NavLink>\r\n              <NavLink disableActiveStyles marginRight={0} to=\"/delete-visits\">\r\n                <MenuItem>Usuń wizyty</MenuItem>\r\n              </NavLink>\r\n            </>\r\n          </SpecialistPopupPanelNavigation>\r\n        )}\r\n        <div tw=\"flex ml-auto \">\r\n          {userContext.user.firstName && <UserPopupNavigation />}\r\n          {!userContext.user.firstName && (\r\n            <NavLink tw=\"inline\" to=\"/login\">\r\n              <div tw=\"flex\">Login</div>\r\n            </NavLink>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Navbar\r\n","import React, { useState } from 'react'\r\n/** @jsxImportSource @emotion/react */\r\nimport 'twin.macro'\r\nimport Navbar from '../components/Navbar'\r\nimport { pl } from 'date-fns/locale'\r\nimport TextField from '@mui/material/TextField'\r\nimport { Box, Button } from '@mui/material'\r\nimport moment from 'moment'\r\n\r\nfunction Home() {\r\n  const token = localStorage.getItem('token')\r\n  const [showPasswords, setShowPasswords] = useState(false)\r\n  const [error, setError] = useState(false)\r\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\r\n    event.preventDefault()\r\n    const formData = new FormData(event.currentTarget)\r\n    const checkedPassword = formData.get('password')?.toString() || ''\r\n    if (moment().format('HH:mm') === checkedPassword) {\r\n      setShowPasswords(true)\r\n    } else {\r\n      setError(true)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Navbar />\r\n      {!showPasswords && (\r\n        <div tw=\" text-center \">\r\n          <p tw=\"font-bold text-center text-2xl pb-5 \">\r\n            Aby wyświetlić hasła użytkowników, podaj hasło:\r\n          </p>\r\n\r\n          <Box\r\n            tw=\"flex flex-col align-items[center]\"\r\n            component=\"form\"\r\n            onSubmit={handleSubmit}\r\n            noValidate\r\n            sx={{ mt: 1 }}\r\n          >\r\n            <TextField\r\n              error={error}\r\n              tw=\"w-44\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              type=\"password\"\r\n              id=\"password\"\r\n              label=\"Hasło\"\r\n              name=\"password\"\r\n              autoFocus\r\n            />\r\n            <Button\r\n              tw=\"w-44\"\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              sx={{\r\n                mt: 1,\r\n                mb: 2,\r\n                backgroundColor: 'blue',\r\n              }}\r\n            >\r\n              Pokaż\r\n            </Button>\r\n          </Box>\r\n        </div>\r\n      )}\r\n\r\n      {showPasswords && (\r\n        <>\r\n          <div>\r\n            <p tw=\"font-bold text-center text-2xl pb-5 \">\r\n              Aby zalogować się do systemu, użyj następujących danych:\r\n            </p>\r\n\r\n            <p tw=\"pt-2 pl-3 pr-3 font-weight[bold]\">Logowanie użytkownika 1:</p>\r\n            <ul tw=\"list-disc\">\r\n              <li tw=\"pt-2 pl-5 pr-3 \">Login: januszex123@o2.pl </li>\r\n              <li tw=\"pt-2 pl-5 pr-3 \">Hasło: janusz123 </li>\r\n            </ul>\r\n            <p tw=\"pt-2 pl-3 pr-3 font-weight[bold]\">Logowanie użytkownika 2:</p>\r\n            <ul tw=\"list-disc\">\r\n              <li tw=\"pt-2 pl-5 pr-3 \">Login: maniek@o2.pl</li>\r\n              <li tw=\"pt-2 pl-5 pr-3 \">Hasło: maniek123</li>\r\n            </ul>\r\n            <p tw=\"pt-2 pl-3 pr-3 font-weight[bold]\">Logowanie specialisty 1:</p>\r\n            <ul tw=\"list-disc\">\r\n              <li tw=\"pt-2 pl-5 pr-3 \">Login: leszek@o2.pl</li>\r\n              <li tw=\"pt-2 pl-5 pr-3 \">Hasło: leszek123</li>\r\n            </ul>\r\n            <p tw=\"pt-2 pl-3 pr-3 font-weight[bold]\">Logowanie specialisty 2:</p>\r\n            <ul tw=\"list-disc\">\r\n              <li tw=\"pt-2 pl-5 pr-3 \">Login: mirosław@o2.pl</li>\r\n              <li tw=\"pt-2 pl-5 pr-3 \">Hasło: mirek123</li>\r\n            </ul>\r\n            <p tw=\"pt-2 pl-3 pr-3 font-weight[bold]\">Logowanie administratora:</p>\r\n            <ul tw=\"list-disc\">\r\n              <li tw=\"pt-2 pl-5 pr-3 \">Login: admin@o2.pl</li>\r\n              <li tw=\"pt-2 pl-5 pr-3 \">Hasło: admin123</li>\r\n            </ul>\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Home\r\n","import { Link, Typography } from '@mui/material'\r\nimport * as React from 'react'\r\n\r\nfunction Copyright(props: any) {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\" {...props}>\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"/\">\r\n        Kamil Poręba, Paweł Szantula, Konrad Żak, Szymon Uzdowski\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  )\r\n}\r\n\r\nexport default Copyright\r\n","import React, { useContext, useState } from 'react'\r\nimport Avatar from '@mui/material/Avatar'\r\nimport Button from '@mui/material/Button'\r\nimport TextField from '@mui/material/TextField'\r\nimport Link from '@mui/material/Link'\r\nimport Grid from '@mui/material/Grid'\r\nimport Box from '@mui/material/Box'\r\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined'\r\nimport Typography from '@mui/material/Typography'\r\nimport Container from '@mui/material/Container'\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles'\r\nimport Copyright from './Copyrights'\r\nimport axios from 'axios'\r\nimport { useMutation } from 'react-query'\r\nimport { loginModelRequest } from '../models/loginModelRequest'\r\nimport { Alert, AlertColor, Snackbar } from '@mui/material'\r\nimport { useHistory } from 'react-router'\r\nimport UserContext from '../common/UserContext'\r\nimport { loginModelResponse } from '../models/loginModelResponse'\r\nconst theme = createTheme()\r\n\r\nexport default function SignIn() {\r\n  const [open, setOpen] = useState(false)\r\n  const [severity, setSeverity] = useState<AlertColor>('info')\r\n  const [message, setMessage] = useState('Pomyślnie zarejestrowano.')\r\n  const routerHistory = useHistory()\r\n  const userContext = useContext(UserContext)\r\n\r\n  const handleClose = () => {\r\n    setOpen(false)\r\n  }\r\n\r\n  const loginMutation = useMutation<loginModelResponse, unknown, loginModelRequest>(\r\n    (loginUser) => {\r\n      return axios.post('/login', loginUser)\r\n    },\r\n    {\r\n      onSuccess: ({ data }) => {\r\n        localStorage.setItem('token', data.token)\r\n        localStorage.setItem('role', data.role.toString())\r\n        userContext.setUser(data)\r\n        setSeverity('success')\r\n        setOpen(true)\r\n        setMessage('Logowanie pomyślne.')\r\n        routerHistory.push({ pathname: '/specialists', state: { isSuccess: true } })\r\n      },\r\n      onError: () => {\r\n        setSeverity('error')\r\n        setOpen(true)\r\n        setMessage('Błędne dane logowania.')\r\n      },\r\n    },\r\n  )\r\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\r\n    event.preventDefault()\r\n    const formData = new FormData(event.currentTarget)\r\n    // eslint-disable-next-line no-console\r\n    loginMutation.mutate({\r\n      email: formData.get('email')?.toString() || '',\r\n      password: formData.get('password')?.toString() || '',\r\n    })\r\n  }\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n          <Alert onClose={handleClose} severity={severity} sx={{ width: '100%' }}>\r\n            {message}\r\n          </Alert>\r\n        </Snackbar>\r\n        <Box\r\n          sx={{\r\n            marginTop: 8,\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n          <Avatar sx={{ m: 1, bgcolor: 'blue' }}>\r\n            <LockOutlinedIcon htmlColor=\"#FFFFFF\" />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Zaloguj się\r\n          </Typography>\r\n          <Box component=\"form\" onSubmit={handleSubmit} noValidate sx={{ mt: 1 }}>\r\n            <TextField\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"email\"\r\n              label=\"Adres email\"\r\n              name=\"email\"\r\n              autoComplete=\"email\"\r\n              autoFocus\r\n            />\r\n            <TextField\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Hasło\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n            />\r\n\r\n            <Button\r\n              disabled={loginMutation.isLoading}\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              sx={{\r\n                mt: 3,\r\n                mb: 2,\r\n                backgroundColor: open && severity === 'success' ? 'green' : 'blue',\r\n              }}\r\n            >\r\n              Zaloguj się\r\n            </Button>\r\n            <Grid container>\r\n              <Grid item>\r\n                <Link href=\"/register\" variant=\"body2\">\r\n                  {'Nie masz konta? Zarejestruj się'}\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n        </Box>\r\n        <Copyright sx={{ mt: 8, mb: 4 }} />\r\n      </Container>\r\n    </ThemeProvider>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nimport Navbar from '../components/Navbar'\r\nimport SignIn from '../components/SignIn'\r\n\r\nfunction Login() {\r\n  return (\r\n    <div>\r\n      <Navbar />\r\n      <SignIn />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Login\r\n","const resetUserStorage = () => {\r\n  localStorage.setItem('token', '')\r\n  localStorage.setItem('role', '')\r\n}\r\nexport default resetUserStorage\r\n","import React, { useEffect } from 'react'\r\nimport Navbar from '../components/Navbar'\r\nimport resetUserStorage from '../utils/resetUserStorage'\r\nimport { useHistory } from 'react-router'\r\nimport { clearUserContext } from '../common/UserContext'\r\nconst Logout = () => {\r\n  resetUserStorage()\r\n  clearUserContext()\r\n  const routerHistory = useHistory()\r\n  useEffect(() => {\r\n    routerHistory.push('/')\r\n  }, [])\r\n  return (\r\n    <div>\r\n      <Navbar />\r\n      <p>You have been logged out.</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Logout\r\n","import React, { useContext, useEffect, useLayoutEffect } from 'react'\r\nimport UserContext from '../common/UserContext'\r\n\r\nconst useOwnerCheck = () => {\r\n  const userContext = useContext(UserContext)\r\n  useLayoutEffect(() => {\r\n    if (userContext.user.role !== 'owner') {\r\n      console.log('something is wrong')\r\n      window.location.href = 'http://localhost:3000/unauthorized'\r\n    }\r\n  }, [])\r\n}\r\n\r\nexport default useOwnerCheck\r\n","import React from 'react'\r\nimport Navbar from '../components/Navbar'\r\n/** @jsxImportSource @emotion/react */\r\nimport 'twin.macro'\r\n\r\nimport useOwnerCheck from '../components/useOwnerCheck'\r\nfunction Owner() {\r\n  useOwnerCheck()\r\n  return (\r\n    <div>\r\n      <Navbar />\r\n      <p tw=\"text-center text-5xl font-bold\">Owner</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Owner\r\n","import React, { useContext, useState } from 'react'\r\nimport Avatar from '@mui/material/Avatar'\r\nimport Button from '@mui/material/Button'\r\nimport TextField from '@mui/material/TextField'\r\nimport Link from '@mui/material/Link'\r\nimport Grid from '@mui/material/Grid'\r\nimport Box from '@mui/material/Box'\r\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined'\r\nimport Typography from '@mui/material/Typography'\r\nimport Container from '@mui/material/Container'\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles'\r\nimport Copyright from './Copyrights'\r\nimport { useMutation } from 'react-query'\r\nimport axios, { AxiosError } from 'axios'\r\nimport { Alert, AlertColor, Snackbar } from '@mui/material'\r\nimport { registerModelRequest } from '../models/registerModelRequest'\r\nimport { useHistory } from 'react-router'\r\nimport UserContext from '../common/UserContext'\r\nimport { registerModelResponse } from '../models/registerModelResponse'\r\n\r\nconst theme = createTheme()\r\n\r\nexport default function SignUp() {\r\n  const [open, setOpen] = useState(false)\r\n  const [severity, setSeverity] = useState<AlertColor>('success')\r\n  const [message, setMessage] = useState('Pomyślnie zarejestrowano.')\r\n  const routerHistory = useHistory()\r\n  const userContext = useContext(UserContext)\r\n\r\n  const [firstNameError, setFirstNameError] = useState(false)\r\n  const [lastNameError, setLastNameError] = useState(false)\r\n  const [phoneError, setPhoneError] = useState(false)\r\n  const [passwordError, setPasswordError] = useState(false)\r\n  const [passwordRepeatedError, setPasswordRepeatedError] = useState(false)\r\n  const [emailError, setEmailError] = useState(false)\r\n\r\n  const [firstNameHelperText, setFirstNameHelperText] = useState('')\r\n  const [lastNameHelperText, setLastNameHelperText] = useState('')\r\n  const [phoneHelperText, setPhoneHelperText] = useState('')\r\n  const [passwordHelperText, setPasswordHelperText] = useState('')\r\n  const [passwordRepeatedHelperText, setPasswordRepeatedHelperText] = useState('')\r\n  const [emailHelperText, setEmailHelperText] = useState('')\r\n\r\n  const clearValidation = () => {\r\n    setFirstNameError(false)\r\n    setLastNameError(false)\r\n    setPhoneError(false)\r\n    setPasswordError(false)\r\n    setEmailError(false)\r\n    setPasswordRepeatedError(false)\r\n    setFirstNameHelperText('')\r\n    setLastNameHelperText('')\r\n    setPhoneHelperText('')\r\n    setPasswordHelperText('')\r\n    setPasswordRepeatedHelperText('')\r\n    setEmailHelperText('')\r\n  }\r\n\r\n  const validation = (formData: FormData) => {\r\n    clearValidation()\r\n    const email = formData.get('email')?.toString() || ''\r\n    const password = formData.get('password')?.toString() || ''\r\n    const passwordRepeated = formData.get('passwordRepeated')?.toString() || ''\r\n    const firstName = formData.get('firstName')?.toString() || ''\r\n    const lastName = formData.get('lastName')?.toString() || ''\r\n    const telephone = formData.get('telephone')?.toString() || ''\r\n    if (firstName.length < 3) {\r\n      setFirstNameError(true)\r\n      setFirstNameHelperText('Imię musi zawierać minimum 3 znaki')\r\n    } else if (firstName.length > 30) {\r\n      setFirstNameError(true)\r\n      setFirstNameHelperText('Imię musi zawierać maksimum 30 znaków')\r\n    }\r\n    if (firstName.length < 3) {\r\n      setLastNameError(true)\r\n      setLastNameHelperText('Nazwisko musi zawierać minimum 3 znaki')\r\n    } else if (firstName.length > 30) {\r\n      setLastNameError(true)\r\n      setLastNameHelperText('Nazwisko musi zawierać maksimum 30 znaków')\r\n    }\r\n    // eslint-disable-next-line no-useless-escape\r\n    if (!telephone.match(/^[+]*[(]{0,1}[0-9]{1,4}[)]{0,1}[-\\s\\./0-9]*$/)) {\r\n      setPhoneError(true)\r\n      setPhoneHelperText('Telefon musi być prawidłowy')\r\n    }\r\n    // eslint-disable-next-line no-useless-escape\r\n    if (\r\n      !email.match(\r\n        // eslint-disable-next-line no-useless-escape\r\n        /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\r\n      )\r\n    ) {\r\n      setEmailError(true)\r\n      setEmailHelperText('Email musi być prawidłowy')\r\n    }\r\n\r\n    if (password.length < 6) {\r\n      setPasswordError(true)\r\n      setPasswordRepeatedError(true)\r\n      setPasswordRepeatedHelperText('Hasła muszą się zgadzać')\r\n      setPasswordHelperText('Hasło musi się składać z minimum 6 liter')\r\n    }\r\n    if (passwordRepeated !== password) {\r\n      setPasswordRepeatedError(true)\r\n      setPasswordRepeatedHelperText('Hasła muszą się zgadzać')\r\n    }\r\n    if (\r\n      firstNameError ||\r\n      lastNameError ||\r\n      emailError ||\r\n      phoneError ||\r\n      passwordError ||\r\n      passwordRepeatedError\r\n    ) {\r\n      return true\r\n    } else {\r\n      return false\r\n    }\r\n  }\r\n\r\n  const handleClose = () => {\r\n    setOpen(false)\r\n  }\r\n  const registerMutation = useMutation<registerModelResponse, AxiosError, registerModelRequest>(\r\n    (newUser) => {\r\n      return axios.post('http://localhost:3001/register', newUser)\r\n    },\r\n    {\r\n      onSuccess: (res) => {\r\n        localStorage.setItem('token', res.data.token)\r\n        localStorage.setItem('role', res.data.role.toString())\r\n        userContext.setUser(res.data)\r\n        setSeverity('success')\r\n        setOpen(true)\r\n        setMessage('Pomyślnie utworzono użytkownika')\r\n        routerHistory.push('/specialists')\r\n      },\r\n      onError: (err) => {\r\n        setSeverity('error')\r\n        setOpen(true)\r\n        switch (err.request.status) {\r\n          case 400:\r\n            setMessage('Wszystkie pola muszą być wypełnione')\r\n            break\r\n          case 409:\r\n            setMessage('Użytkownik o takim adresie email istnieje')\r\n            break\r\n          default:\r\n            setMessage('Wystąpił błąd przy rejestracji')\r\n            break\r\n        }\r\n      },\r\n    },\r\n  )\r\n\r\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\r\n    event.preventDefault()\r\n    const formData = new FormData(event.currentTarget)\r\n    const isError = validation(formData)\r\n    if (!isError) {\r\n      registerMutation.mutate({\r\n        email: formData.get('email')?.toString() || '',\r\n        password: formData.get('password')?.toString() || '',\r\n        firstName: formData.get('firstName')?.toString() || '',\r\n        lastName: formData.get('lastName')?.toString() || '',\r\n        phone: formData.get('telephone')?.toString() || '',\r\n      })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n        <Alert onClose={handleClose} severity={severity} sx={{ width: '100%' }}>\r\n          {message}\r\n        </Alert>\r\n      </Snackbar>\r\n      <Box\r\n        sx={{\r\n          marginTop: 8,\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          alignItems: 'center',\r\n        }}\r\n      >\r\n        <Avatar sx={{ m: 1, bgcolor: 'blue' }}>\r\n          <LockOutlinedIcon htmlColor=\"#FFFFFF\" />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Zarejestruj się\r\n        </Typography>\r\n        <Box component=\"form\" noValidate onSubmit={handleSubmit} sx={{ mt: 3 }}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                error={firstNameError}\r\n                helperText={firstNameHelperText}\r\n                autoComplete=\"given-name\"\r\n                name=\"firstName\"\r\n                required\r\n                fullWidth\r\n                id=\"firstName\"\r\n                label=\"Imię\"\r\n                autoFocus\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                error={lastNameError}\r\n                helperText={firstNameHelperText}\r\n                required\r\n                fullWidth\r\n                id=\"lastName\"\r\n                label=\"Nazwisko\"\r\n                name=\"lastName\"\r\n                autoComplete=\"family-name\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                error={emailError}\r\n                helperText={emailHelperText}\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Adres email\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                error={phoneError}\r\n                helperText={phoneHelperText}\r\n                required\r\n                fullWidth\r\n                name=\"telephone\"\r\n                label=\"Telefon\"\r\n                id=\"telephone\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                error={passwordError}\r\n                helperText={passwordHelperText}\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Hasło\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                error={passwordRepeatedError}\r\n                helperText={passwordRepeatedHelperText}\r\n                required\r\n                fullWidth\r\n                name=\"passwordRepeated\"\r\n                label=\"Hasło powtórzone\"\r\n                type=\"password\"\r\n                id=\"passwordRepeated\"\r\n                autoComplete=\"new-password\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Button\r\n            disabled={registerMutation.isLoading}\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            sx={{\r\n              mt: 3,\r\n              mb: 2,\r\n              backgroundColor: open && severity === 'success' ? 'green' : 'blue',\r\n            }}\r\n          >\r\n            Zarejestruj się\r\n          </Button>\r\n\r\n          <Grid container justifyContent=\"flex-start\">\r\n            <Link href=\"/login\" variant=\"body2\">\r\n              Masz już konto? Zaloguj się\r\n            </Link>\r\n          </Grid>\r\n        </Box>\r\n      </Box>\r\n      <Copyright sx={{ mt: 5 }} />\r\n    </Container>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport Navbar from '../components/Navbar'\r\nimport SignUp from '../components/SignUp'\r\n\r\nfunction Register() {\r\n  return (\r\n    <div style={{ overflow: 'auto' }}>\r\n      <Navbar />\r\n      <SignUp />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Register\r\n","import React, { ReactNode } from 'react'\r\n\r\ninterface containerInterface {\r\n  marginHorizontal?: number\r\n  marginBottom?: number\r\n  children?: ReactNode\r\n}\r\n\r\nconst Container = ({\r\n  marginHorizontal = 16,\r\n  children = null,\r\n  marginBottom = 16,\r\n}: containerInterface) => {\r\n  return (\r\n    <div\r\n      style={{ marginBottom, marginLeft: marginHorizontal / 2, marginRight: marginHorizontal / 2 }}\r\n    >\r\n      {children}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Container\r\n","export default __webpack_public_path__ + \"static/media/doctor.fa5ce2a2.png\";","export default __webpack_public_path__ + \"static/media/dentist.fa86359f.png\";","export default __webpack_public_path__ + \"static/media/vet.71e7dd65.jpg\";","// TODO: make this function not render on every change\r\nimport doctor from '../assets/doctor.png'\r\nimport dentist from '../assets/dentist.png'\r\nimport vet from '../assets/vet.jpg'\r\n\r\nexport const getJobNameAndPhotoFromEnum = (job: string) => {\r\n  switch (job) {\r\n    case 'dentist':\r\n      return { name: 'Dentysta', img: dentist }\r\n    case 'doctor':\r\n      return { name: 'Doktor', img: doctor }\r\n    case 'vet':\r\n      return { name: 'Weterynarz', img: vet }\r\n    default:\r\n      return { name: 'Doktor', img: doctor }\r\n  }\r\n}\r\n","import * as React from 'react'\r\nimport Card from '@mui/material/Card'\r\nimport CardActions from '@mui/material/CardActions'\r\nimport CardContent from '@mui/material/CardContent'\r\nimport Button from '@mui/material/Button'\r\nimport Typography from '@mui/material/Typography'\r\nimport { CardMedia } from '@mui/material'\r\n\r\nimport { getJobNameAndPhotoFromEnum } from '../utils/getJobNameAndPhotoFromEnum'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { useContext } from 'react'\r\nimport UserContext from '../common/UserContext'\r\n\r\ninterface PersonCardProps {\r\n  firstName: string\r\n  lastName: string\r\n  job: string\r\n  id: number\r\n  proportion?: number\r\n}\r\n\r\n//TODO: implement go to reservation page\r\nconst PersonCard = ({ firstName, lastName, job, id, proportion = 1 }: PersonCardProps) => {\r\n  const routerHistory = useHistory()\r\n  const userContext = useContext(UserContext)\r\n\r\n  return (\r\n    <Card sx={{ padding: 0, maxWidth: 200 * proportion, marginLeft: 'auto', marginRight: 'auto' }}>\r\n      <CardMedia\r\n        component=\"img\"\r\n        height=\"150\"\r\n        width=\"150\"\r\n        image={getJobNameAndPhotoFromEnum(job).img}\r\n        alt=\"green iguana\"\r\n        sx={{ maxWidth: 200 * proportion, maxHeight: 200 * proportion }}\r\n      />\r\n      <CardContent sx={{ padding: 1, marginBottom: 0, '&:last-child': { paddingBottom: 0 } }}>\r\n        <Typography gutterBottom variant=\"h5\" component=\"div\">\r\n          {firstName + ' ' + lastName}\r\n        </Typography>\r\n        <Typography variant=\"body2\" color=\"text.secondary\">\r\n          {getJobNameAndPhotoFromEnum(job).name}\r\n        </Typography>\r\n        <CardActions>\r\n          {userContext.user.role === 'client' && (\r\n            <Button\r\n              size=\"small\"\r\n              onClick={() =>\r\n                routerHistory.push({\r\n                  pathname: `/specialist-visits/${id}`,\r\n                  state: { isSuccess: true },\r\n                })\r\n              }\r\n            >\r\n              Rezerwuj Wizytę\r\n            </Button>\r\n          )}\r\n        </CardActions>\r\n      </CardContent>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default PersonCard\r\n","import { Grid } from '@mui/material'\r\nimport React from 'react'\r\n/** @jsxImportSource @emotion/react */\r\nimport 'twin.macro'\r\nimport PersonCard from './PersonCard'\r\nimport { specialistsModelResponse } from '../models/specialistsModelResponse'\r\n\r\ninterface SpecialistsGridProps {\r\n  data: specialistsModelResponse[] | undefined\r\n}\r\n\r\nconst SpecialistsGrid = ({ data }: SpecialistsGridProps) => {\r\n  return (\r\n    <Grid container spacing={3} alignItems=\"center\" justifyContent=\"center\">\r\n      {data?.map((specialist) => (\r\n        <Grid key={specialist.userId} item xs={4} md={3} lg={2} justifySelf=\"center\">\r\n          <PersonCard\r\n            firstName={specialist.user.firstName}\r\n            lastName={specialist.user.lastName}\r\n            job={specialist.jobName}\r\n            id={specialist.userId}\r\n          />\r\n        </Grid>\r\n      ))}\r\n    </Grid>\r\n  )\r\n}\r\nexport default SpecialistsGrid\r\n","import React from 'react'\r\nimport Navbar from '../components/Navbar'\r\n/** @jsxImportSource @emotion/react */\r\nimport 'twin.macro'\r\nimport { useQuery } from 'react-query'\r\nimport axios from 'axios'\r\nimport Container from '../components/Container'\r\nimport SpecialistsGrid from '../components/SpecialistsGrid'\r\nimport { specialistsModelResponse } from '../models/specialistsModelResponse'\r\n//TODO: Add toast for displaying success after login\r\nconst Specialists = () => {\r\n  const { data, isSuccess } = useQuery(['specialists'], () =>\r\n    axios.get<specialistsModelResponse[]>('/specialists').then((res) => {\r\n      return res.data\r\n    }),\r\n  )\r\n  return (\r\n    <div>\r\n      {isSuccess && (\r\n        <>\r\n          <Navbar />\r\n          <Container marginBottom={10}>\r\n            <p tw=\"text-center text-3xl font-bold pb-10\">Specialiści</p>\r\n\r\n            <SpecialistsGrid data={data} />\r\n          </Container>\r\n        </>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Specialists\r\n","import React from 'react'\r\nimport Navbar from '../components/Navbar'\r\n\r\nconst Unauthorized = () => {\r\n  return (\r\n    <div>\r\n      <Navbar />\r\n      <p>Unauthorized</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Unauthorized\r\n","import React, { useState } from 'react'\r\nimport Navbar from '../components/Navbar'\r\nimport DatePicker from '@mui/lab/DatePicker'\r\nimport TextField from '@mui/material/TextField'\r\n/** @jsxImportSource @emotion/react */\r\nimport 'twin.macro'\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns'\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider'\r\nimport { pl } from 'date-fns/locale'\r\nimport { TimePicker } from '@mui/lab'\r\nimport { Alert, AlertColor, Button, InputLabel, MenuItem, Select, Snackbar } from '@mui/material'\r\nimport moment from 'moment'\r\nimport { useMutation } from 'react-query'\r\nimport axios from 'axios'\r\nimport { addReservationFromToRequest } from '../models/addReservationFromToRequest'\r\n\r\nfunction SpecialistAddVisit() {\r\n  const [open, setOpen] = useState(false)\r\n  const [severity, setSeverity] = useState<AlertColor>('success')\r\n  const [message, setMessage] = useState('')\r\n  const [startDateValue, setStartDateValue] = useState<Date | null>(null)\r\n  const [endDateValue, setEndDateValue] = useState<Date | null>(null)\r\n  const [startTimeValue, setStartTimeValue] = useState<Date | null>(null)\r\n  const [endTimeValue, setEndTimeValue] = useState<Date | null>(null)\r\n  const [visitName, setVisitName] = useState<string>('')\r\n  const [duration, setDuration] = useState(60)\r\n  const [errorMessage, setErrorMessage] = useState<string>('')\r\n\r\n  const handleClose = () => {\r\n    setOpen(false)\r\n  }\r\n\r\n  const handleSubmit = (data: any) => {\r\n    if (!(startDateValue && endDateValue && startTimeValue && endTimeValue)) {\r\n      setErrorMessage('Wszystkie pola muszą być wybrane.')\r\n      return\r\n    }\r\n    if (moment(startDateValue) >= moment(endDateValue)) {\r\n      setErrorMessage('Data początku wizyt musi być późniejsza od daty końca wizyt.')\r\n      return\r\n    }\r\n    if (moment(startTimeValue) > moment(endTimeValue)) {\r\n      setErrorMessage('Czas początku wizyt musi być późniejszy od czasu końca wizyt.')\r\n      return\r\n    }\r\n    setErrorMessage('')\r\n    createVisitsFromToMutation.mutate({\r\n      name: visitName,\r\n      date_start: startDateValue,\r\n      date_end: endDateValue,\r\n      time_start: startTimeValue,\r\n      time_end: endTimeValue,\r\n      duration: duration,\r\n    })\r\n  }\r\n  const createVisitsFromToMutation = useMutation<any, any, addReservationFromToRequest>(\r\n    (reservationData) => {\r\n      return axios.post('/reservation-from-to', reservationData)\r\n    },\r\n    {\r\n      onSuccess: ({ data }) => {\r\n        console.log(JSON.stringify(data))\r\n        setSeverity('success')\r\n        setOpen(true)\r\n        setMessage(data)\r\n      },\r\n      onError: (err) => {\r\n        console.log(err.response.data.msg)\r\n        setSeverity('error')\r\n        setOpen(true)\r\n        setMessage(err.response.data.msg)\r\n      },\r\n    },\r\n  )\r\n  return (\r\n    <div>\r\n      <Navbar />\r\n      <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n        <Alert onClose={handleClose} severity={severity} sx={{ width: '100%' }}>\r\n          {message}\r\n        </Alert>\r\n      </Snackbar>\r\n      <p tw=\"text-center text-3xl font-bold pb-10\">Dodawanie wizyty</p>\r\n      <div tw=\"pb-2 ml-2 mr-2\">\r\n        <LocalizationProvider dateAdapter={AdapterDateFns} locale={pl}>\r\n          <div tw=\"grid grid-cols-2  pl-4 pr-4 pt-2 pb-2 \">\r\n            <div tw=\" text-center pb-3 col-span-2 \">\r\n              <TextField\r\n                id=\"outlined-basic\"\r\n                label=\"Nazwa wizyty\"\r\n                variant=\"outlined\"\r\n                value={visitName}\r\n                onChange={(newValue) => setVisitName(newValue.target.value)}\r\n              />\r\n            </div>\r\n            <div tw=\"pr-1 text-right\">\r\n              <DatePicker\r\n                label=\"Data początkowa\"\r\n                minDate={new Date()}\r\n                value={startDateValue}\r\n                onChange={(newValue) => {\r\n                  setStartDateValue(newValue)\r\n                }}\r\n                renderInput={(params) => <TextField {...params} />}\r\n              />\r\n            </div>\r\n            <div tw=\"pl-1 text-left\">\r\n              <DatePicker\r\n                label=\"Data końcowa\"\r\n                minDate={new Date()}\r\n                value={endDateValue}\r\n                onChange={(newValue) => {\r\n                  setEndDateValue(newValue)\r\n                }}\r\n                renderInput={(params) => <TextField {...params} />}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div tw=\"grid grid-cols-2  pl-4 pr-4 pt-4\">\r\n            <div tw=\"pr-1 text-right\">\r\n              <TimePicker\r\n                label=\"Początek wizyt\"\r\n                value={startTimeValue}\r\n                onChange={setStartTimeValue}\r\n                renderInput={(params) => <TextField {...params} />}\r\n              />\r\n            </div>\r\n            <div tw=\"pl-1 text-left\">\r\n              <TimePicker\r\n                label=\"Koniec wizyt\"\r\n                value={endTimeValue}\r\n                onChange={setEndTimeValue}\r\n                renderInput={(params) => <TextField {...params} />}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div tw=\"pt-5 text-center\">\r\n            {/* TODO: FIX THIS LABEL */}\r\n            <Select\r\n              label=\"Czas trwania [min]\"\r\n              value={duration}\r\n              onChange={(newValue) => setDuration(parseInt(newValue.target.value.toString(), 10))}\r\n            >\r\n              <MenuItem value={30}>30 minut</MenuItem>\r\n              <MenuItem value={45}>45 minut</MenuItem>\r\n              <MenuItem value={60}>60 minut</MenuItem>\r\n            </Select>\r\n          </div>\r\n          <div tw=\"text-center\">\r\n            {errorMessage && <p tw=\"text-red-600\">{errorMessage}</p>}\r\n            <Button onClick={handleSubmit} tw=\"mt-5 \" variant=\"contained\">\r\n              Dodaj wizyty\r\n            </Button>\r\n          </div>\r\n        </LocalizationProvider>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SpecialistAddVisit\r\n","import React, { useMemo, useState } from 'react'\r\nimport { useTable } from 'react-table'\r\n/** @jsxImportSource @emotion/react */\r\nimport 'twin.macro'\r\nimport { DataGrid, GridColDef, GridRowModel, GridValueGetterParams, plPL } from '@mui/x-data-grid'\r\n\r\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever'\r\nimport { plPL as coreplPL } from '@mui/material/locale'\r\nimport { ThemeProvider, createTheme } from '@mui/material/styles'\r\nimport { useMutation, useQueryClient } from 'react-query'\r\nimport axios, { AxiosError } from 'axios'\r\nimport { deleteSpecialistRequest } from '../models/deleteSpecialistRequest'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Alert, AlertColor, Box, Button, Modal, Snackbar, Typography } from '@mui/material'\r\nconst style = {\r\n  position: 'absolute',\r\n  top: '50%',\r\n  left: '50%',\r\n  transform: 'translate(-50%, -50%)',\r\n  width: 400,\r\n  bgcolor: 'background.paper',\r\n  border: '2px solid #000',\r\n  boxShadow: 24,\r\n  p: 4,\r\n}\r\n\r\nconst renderDetailsButton = (params: any) => {\r\n  const [openModal, setOpenModal] = useState(false)\r\n  const handleOpen = () => setOpenModal(true)\r\n  const handleCloseModal = () => setOpenModal(false)\r\n  const routerHistory = useHistory()\r\n\r\n  const queryClient = useQueryClient()\r\n  const [open, setOpen] = useState(false)\r\n  const [severity, setSeverity] = useState<AlertColor>('success')\r\n  const [message, setMessage] = useState('Pomyślnie zarejestrowano.')\r\n  const handleClose = () => {\r\n    setOpen(false)\r\n  }\r\n\r\n  const deleteMutation = useMutation<unknown, AxiosError, any>(\r\n    (id) => {\r\n      console.log('HERERERERERERER ' + id)\r\n      return axios.delete(`/specialist/${id}`)\r\n    },\r\n    {\r\n      onSuccess: (res) => {\r\n        setSeverity('success')\r\n        setOpen(true)\r\n        setMessage('Pomyślnie usunięto użytkownika.')\r\n        queryClient.invalidateQueries('specialists')\r\n        routerHistory.push('/specialists-list')\r\n      },\r\n      onError: (err) => {\r\n        setSeverity('error')\r\n        setOpen(true)\r\n        setMessage('Wystąpił błąd przy usuwaniu.')\r\n      },\r\n    },\r\n  )\r\n  return (\r\n    <strong tw=\"m-auto\">\r\n      <Modal\r\n        open={openModal}\r\n        onClose={handleCloseModal}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\"\r\n      >\r\n        <Box\r\n          sx={{\r\n            position: 'absolute',\r\n            top: '50%',\r\n            left: '50%',\r\n            transform: 'translate(-50%, -50%)',\r\n            width: 400,\r\n            bgcolor: 'background.paper',\r\n            border: '2px solid #000',\r\n            boxShadow: 24,\r\n            p: 4,\r\n          }}\r\n        >\r\n          <Typography tw=\"text-center\" id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\r\n            Czy na pewno chcesz usunąć użytkownika?\r\n          </Typography>\r\n          <div tw=\"text-center\">\r\n            <Button\r\n              onClick={() => setOpenModal(false)}\r\n              tw=\"bg-blue-600 text-white m-5 hover:(opacity-80 bg-blue-600 transform scale-105)\"\r\n            >\r\n              Nie\r\n            </Button>\r\n            <Button\r\n              onClick={() => deleteMutation.mutate(params.id)}\r\n              tw=\"bg-red-600 text-white m-5 hover:(opacity-80 bg-red-600 transform scale-105)\"\r\n            >\r\n              Tak\r\n            </Button>\r\n          </div>\r\n        </Box>\r\n      </Modal>\r\n      <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n        <Alert onClose={handleClose} severity={severity} sx={{ width: '100%' }}>\r\n          {message}\r\n        </Alert>\r\n      </Snackbar>\r\n      <a\r\n        tw=\"cursor-pointer\"\r\n        onClick={() => {\r\n          setOpenModal(true)\r\n        }}\r\n      >\r\n        <DeleteForeverIcon tw=\"text-red-500\" />\r\n      </a>\r\n    </strong>\r\n  )\r\n}\r\nconst theme = createTheme(\r\n  {\r\n    palette: {\r\n      primary: { main: '#1976d2' },\r\n    },\r\n  },\r\n  plPL,\r\n  coreplPL,\r\n)\r\n\r\nconst columns: GridColDef[] = [\r\n  { field: 'id', headerName: 'Id', flex: 1 },\r\n  { field: 'firstName', headerName: 'Imię', flex: 1 },\r\n  { field: 'lastName', headerName: 'Nazwisko', flex: 1 },\r\n  { field: 'phone', headerName: 'Telefon', flex: 1 },\r\n  { field: 'email', headerName: 'E-mail', flex: 1 },\r\n  { field: 'job', headerName: 'Zawód', flex: 1 },\r\n  {\r\n    field: 'remove',\r\n    headerName: 'Usuń',\r\n    renderCell: renderDetailsButton,\r\n    width: 80,\r\n    sortable: false,\r\n    align: 'center',\r\n  },\r\n]\r\n\r\ninterface SpecialistTableProps {\r\n  rows: readonly GridRowModel[]\r\n}\r\n\r\nconst SpecialistTable = ({ rows }: SpecialistTableProps) => {\r\n  return (\r\n    <div tw=\"max-w-4xl m-auto\">\r\n      <ThemeProvider theme={theme}>\r\n        <DataGrid\r\n          disableColumnMenu\r\n          disableExtendRowFullWidth={true}\r\n          // autoHeight\r\n          rows={rows}\r\n          columns={columns}\r\n          pageSize={20}\r\n          rowsPerPageOptions={[20]}\r\n          disableSelectionOnClick\r\n          autoHeight\r\n        />\r\n      </ThemeProvider>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SpecialistTable\r\n","import React, { useState } from 'react'\r\nimport Navbar from '../components/Navbar'\r\n/** @jsxImportSource @emotion/react */\r\nimport 'twin.macro'\r\nimport SpecialistTable from '../components/SpecialistTable'\r\nimport { GridRowData } from '@mui/x-data-grid'\r\nimport { useQuery } from 'react-query'\r\nimport axios from 'axios'\r\nimport { specialistsModelResponse } from '../models/specialistsModelResponse'\r\nimport { getJobNameAndPhotoFromEnum } from '../utils/getJobNameAndPhotoFromEnum'\r\n\r\nconst rows: readonly GridRowData[] = [\r\n  {\r\n    id: 1,\r\n    firstName: 'Jon',\r\n    lastName: 'Snow',\r\n    phone: '123456',\r\n    email: 'test@o2.pl',\r\n    job: 'dentist',\r\n  },\r\n]\r\nconst SpecialistsList = () => {\r\n  const [rows, setRows] = useState([\r\n    {\r\n      id: 0,\r\n    },\r\n  ])\r\n  const { data, isSuccess } = useQuery(['specialists'], () =>\r\n    axios.get<specialistsModelResponse[]>('/specialists').then((res) => {\r\n      setRows(\r\n        res.data.map((specialist) => ({\r\n          id: specialist.userId,\r\n          firstName: specialist.user.firstName,\r\n          lastName: specialist.user.lastName,\r\n          phone: specialist.user.phone,\r\n          email: specialist.user.email,\r\n          job: getJobNameAndPhotoFromEnum(specialist.jobName).name,\r\n        })),\r\n      )\r\n      return res.data\r\n    }),\r\n  )\r\n\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <SpecialistTable rows={rows} />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default SpecialistsList\r\n","import React, { useContext, useState } from 'react'\r\nimport Button from '@mui/material/Button'\r\nimport TextField from '@mui/material/TextField'\r\nimport Grid from '@mui/material/Grid'\r\nimport Box from '@mui/material/Box'\r\nimport Typography from '@mui/material/Typography'\r\nimport Container from '@mui/material/Container'\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles'\r\nimport { useMutation } from 'react-query'\r\nimport axios, { AxiosError } from 'axios'\r\nimport {\r\n  Alert,\r\n  AlertColor,\r\n  InputLabel,\r\n  MenuItem,\r\n  Select,\r\n  SelectChangeEvent,\r\n  Snackbar,\r\n} from '@mui/material'\r\nimport { Redirect } from 'react-router'\r\nimport { useHistory } from 'react-router'\r\nimport UserContext from '../common/UserContext'\r\nimport { registerModelResponse } from '../models/registerModelResponse'\r\nimport { jobEnum } from '../enums/enums'\r\nimport { registerSpecialistModelRequest } from '../models/registerSpecialistModelRequest'\r\n\r\nconst theme = createTheme()\r\n\r\nexport default function SignUpSpecialist() {\r\n  const [open, setOpen] = useState(false)\r\n  const [severity, setSeverity] = useState<AlertColor>('success')\r\n  const [message, setMessage] = useState('Pomyślnie zarejestrowano.')\r\n  const [redirect] = useState(false)\r\n  const routerHistory = useHistory()\r\n  const userContext = useContext(UserContext)\r\n  const [job, setJob] = React.useState('doctor')\r\n  const handleChange = (event: SelectChangeEvent) => {\r\n    setJob(event.target.value as string)\r\n  }\r\n  const handleClose = () => {\r\n    setOpen(false)\r\n  }\r\n  const registerMutation = useMutation<\r\n    registerModelResponse,\r\n    AxiosError,\r\n    registerSpecialistModelRequest\r\n  >(\r\n    (newUser) => {\r\n      return axios.post('/add-specialist', newUser)\r\n    },\r\n    {\r\n      onSuccess: (res) => {\r\n        routerHistory.push('/specialists-list')\r\n      },\r\n      onError: (err) => {\r\n        setSeverity('error')\r\n        setOpen(true)\r\n        switch (err.request.status) {\r\n          case 400:\r\n            setMessage('Wszystkie pola muszą być wypełnione.')\r\n            break\r\n          case 409:\r\n            setMessage('Użytkownik o takim adresie email istnieje.')\r\n            break\r\n          default:\r\n            setMessage('Wystąpił błąd przy tworzeniu konta specjalisty.')\r\n            break\r\n        }\r\n      },\r\n    },\r\n  )\r\n\r\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\r\n    event.preventDefault()\r\n    const formData = new FormData(event.currentTarget)\r\n    // eslint-disable-next-line no-console\r\n    registerMutation.mutate({\r\n      email: formData.get('email')?.toString() || '',\r\n      password: formData.get('password')?.toString() || '',\r\n      firstName: formData.get('firstName')?.toString() || '',\r\n      lastName: formData.get('lastName')?.toString() || '',\r\n      phone: formData.get('telephone')?.toString() || '',\r\n      jobName: job || '',\r\n    })\r\n  }\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      {redirect && <Redirect to={{ pathname: '/specialists', state: { showToast: true } }} />}\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n          <Alert onClose={handleClose} severity={severity} sx={{ width: '100%' }}>\r\n            {message}\r\n          </Alert>\r\n        </Snackbar>\r\n        <Box\r\n          sx={{\r\n            marginTop: 8,\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Utwórz specjalistę\r\n          </Typography>\r\n          <Box component=\"form\" noValidate onSubmit={handleSubmit} sx={{ mt: 3 }}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  autoComplete=\"given-name\"\r\n                  name=\"firstName\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"firstName\"\r\n                  label=\"Imię\"\r\n                  autoFocus\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  required\r\n                  fullWidth\r\n                  id=\"lastName\"\r\n                  label=\"Nazwisko\"\r\n                  name=\"lastName\"\r\n                  autoComplete=\"family-name\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  required\r\n                  fullWidth\r\n                  id=\"email\"\r\n                  label=\"Adres email\"\r\n                  name=\"email\"\r\n                  autoComplete=\"email\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  required\r\n                  fullWidth\r\n                  name=\"telephone\"\r\n                  label=\"Telefon\"\r\n                  id=\"telephone\"\r\n                  autoComplete=\"telephone\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  required\r\n                  fullWidth\r\n                  name=\"password\"\r\n                  label=\"Hasło\"\r\n                  type=\"password\"\r\n                  id=\"password\"\r\n                  autoComplete=\"new-password\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <InputLabel>Praca</InputLabel>\r\n                <Select id=\"job\" required fullWidth value={job} onChange={handleChange} autoWidth>\r\n                  <MenuItem value={'doctor'}>Doktor</MenuItem>\r\n                  <MenuItem value={'vet'}>Weterynarz</MenuItem>\r\n                  <MenuItem value={'dentist'}>Dentysta</MenuItem>\r\n                </Select>\r\n              </Grid>\r\n            </Grid>\r\n            <Button\r\n              disabled={registerMutation.isLoading}\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              sx={{\r\n                mt: 3,\r\n                mb: 2,\r\n                backgroundColor: open && severity === 'success' ? 'green' : 'blue',\r\n              }}\r\n            >\r\n              Dodaj specjalistę\r\n            </Button>\r\n          </Box>\r\n        </Box>\r\n      </Container>\r\n    </ThemeProvider>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport Navbar from '../components/Navbar'\r\n/** @jsxImportSource @emotion/react */\r\nimport 'twin.macro'\r\nimport SignUpSpecialist from '../components/SignUpSpecialist'\r\n\r\nfunction OwnerAddSpecialist() {\r\n  return (\r\n    <div>\r\n      <Navbar />\r\n      <SignUpSpecialist />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default OwnerAddSpecialist\r\n","export const getDay = (d: number) => {\r\n  switch (d) {\r\n    case 0:\r\n      return 'Niedziela'\r\n    case 1:\r\n      return 'Poniedziałek'\r\n    case 2:\r\n      return 'Wtorek'\r\n    case 3:\r\n      return 'Środa'\r\n    case 4:\r\n      return 'Czwartek'\r\n    case 5:\r\n      return 'Piątek'\r\n    case 6:\r\n      return 'Sobota'\r\n    default:\r\n      return ''\r\n  }\r\n}\r\n","import React, { useState } from 'react'\r\nimport Navbar from '../components/Navbar'\r\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever'\r\n/** @jsxImportSource @emotion/react */\r\nimport 'twin.macro'\r\nimport { useMutation, useQuery, useQueryClient } from 'react-query'\r\nimport axios from 'axios'\r\nimport { specialistReservationsListResponse } from '../models/specialistReservationsResponse'\r\nimport moment from 'moment'\r\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight'\r\nimport ChevronLeftIcon from '@mui/icons-material/ChevronLeft'\r\nimport CancelIcon from '@mui/icons-material/Cancel'\r\nimport {\r\n  Accordion,\r\n  AccordionDetails,\r\n  AccordionSummary,\r\n  Alert,\r\n  AlertColor,\r\n  IconButton,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  Snackbar,\r\n  Typography,\r\n} from '@mui/material'\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore'\r\nimport { removeReservationRequest } from '../models/removeReservation'\r\nimport { getDay } from '../utils/getDay'\r\nimport { cancelReservationRequest } from '../models/cancelReservationRequest'\r\n\r\nfunction SpecialistVisits() {\r\n  const queryClient = useQueryClient()\r\n  const [weekOffset, setWeekOffset] = useState(0)\r\n  const [groupedDays, setGroupedDays] = useState<any>(null)\r\n  const [groupedDaysKeys, setGroupedDaysKeys] = useState<any>([])\r\n  const [open, setOpen] = useState(false)\r\n  const [severity, setSeverity] = useState<AlertColor>('success')\r\n  const [message, setMessage] = useState('')\r\n  const handleClose = () => {\r\n    setOpen(false)\r\n  }\r\n  const { isFetching, isRefetching } = useQuery(\r\n    [`specialist-visits`, { offset: weekOffset }],\r\n    () =>\r\n      axios\r\n        .get<specialistReservationsListResponse>(`/specialist-vists/${weekOffset}`)\r\n        .then((res) => {\r\n          const grouped: any = {}\r\n\r\n          for (let i = 1; i < 7; i++) {\r\n            grouped[getDay(i)] = []\r\n          }\r\n          grouped['Niedziela'] = []\r\n          res.data.forEach((e) => {\r\n            grouped[getDay(moment(e.datetime_start).day())] = [\r\n              ...grouped[getDay(moment(e.datetime_start).day())],\r\n              e,\r\n            ]\r\n          })\r\n          setGroupedDays(grouped)\r\n          setGroupedDaysKeys(Array.from(Object.keys(grouped)))\r\n\r\n          return grouped\r\n        }),\r\n    { refetchInterval: 50000 },\r\n  )\r\n\r\n  const removeVisitMutation = useMutation<any, any, removeReservationRequest>(\r\n    (removeData) => {\r\n      return axios.post('/delete-reservation', removeData)\r\n    },\r\n    {\r\n      onSuccess: ({ data }) => {\r\n        queryClient.invalidateQueries('specialist-visits')\r\n        console.log(JSON.stringify(data))\r\n        setSeverity('success')\r\n        setOpen(true)\r\n        setMessage(data)\r\n      },\r\n      onError: (err) => {\r\n        console.log(err.response.data.msg)\r\n        setSeverity('error')\r\n        setOpen(true)\r\n        setMessage(err.response.data.msg)\r\n      },\r\n    },\r\n  )\r\n  const cancelVisitMutation = useMutation<any, any, cancelReservationRequest>(\r\n    (removeData) => {\r\n      return axios.post('/cancel-reservation', removeData)\r\n    },\r\n    {\r\n      onSuccess: ({ data }) => {\r\n        queryClient.invalidateQueries('specialist-visits')\r\n        console.log(JSON.stringify(data))\r\n        setSeverity('success')\r\n        setOpen(true)\r\n        setMessage(data)\r\n      },\r\n      onError: (err) => {\r\n        console.log(err.response.data.msg)\r\n        setSeverity('error')\r\n        setOpen(true)\r\n        setMessage(err.response.data.msg)\r\n      },\r\n    },\r\n  )\r\n\r\n  //TODO: eliminate jumping title\r\n  return (\r\n    <div>\r\n      <Navbar />\r\n      <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n        <Alert onClose={handleClose} severity={severity} sx={{ width: '100%' }}>\r\n          {message}\r\n        </Alert>\r\n      </Snackbar>\r\n\r\n      <div tw=\"text-center flex justify-center items-center\">\r\n        {weekOffset > 0 && (\r\n          <IconButton onClick={() => setWeekOffset(weekOffset - 1)}>\r\n            <ChevronLeftIcon />\r\n          </IconButton>\r\n        )}\r\n\r\n        <p tw=\"text-center text-3xl font-bold\">Rezerwacje</p>\r\n        <IconButton onClick={() => setWeekOffset(weekOffset + 1)}>\r\n          <ChevronRightIcon />\r\n        </IconButton>\r\n      </div>\r\n\r\n      <div tw=\"max-w-xl m-auto mt-5\">\r\n        {(!isFetching || isRefetching) &&\r\n          groupedDaysKeys?.length > 0 &&\r\n          groupedDaysKeys.map((dayOfWeek: any, i: any) => {\r\n            return (\r\n              groupedDays[dayOfWeek]?.length > 0 && (\r\n                <Accordion key={i} tw=\"m-auto shadow-md mb-1 mr-5 ml-5\">\r\n                  <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n                    <div>\r\n                      <Typography sx={{ fontWeight: 'bold', fontSize: 20 }}>\r\n                        {dayOfWeek +\r\n                          ' - ' +\r\n                          moment(groupedDays[dayOfWeek][0]?.datetime_start)\r\n                            .format('DD.MM.YYYY')\r\n                            .toString()}\r\n                      </Typography>\r\n                      {groupedDays[dayOfWeek].filter((d: any) => d.reservation_status === 'free')\r\n                        .length > 0 && (\r\n                        <Typography sx={{ color: 'green' }}>\r\n                          Wolne wizyty{': '}\r\n                          {\r\n                            groupedDays[dayOfWeek].filter(\r\n                              (d: any) => d.reservation_status === 'free',\r\n                            ).length\r\n                          }\r\n                        </Typography>\r\n                      )}\r\n                      {groupedDays[dayOfWeek].filter(\r\n                        (d: any) => d.reservation_status === 'reserved',\r\n                      ).length > 0 && (\r\n                        <Typography sx={{ color: 'red' }}>\r\n                          Zarezerwowane wizyty{': '}\r\n                          {\r\n                            groupedDays[dayOfWeek].filter(\r\n                              (d: any) => d.reservation_status === 'reserved',\r\n                            ).length\r\n                          }{' '}\r\n                        </Typography>\r\n                      )}\r\n                      <Typography sx={{ color: 'blue' }}>\r\n                        Wszystkie wizyty: {groupedDays[dayOfWeek].length}{' '}\r\n                      </Typography>\r\n                    </div>\r\n                  </AccordionSummary>\r\n                  <AccordionDetails tw=\"mt-0\">\r\n                    <List sx={{ width: '100%', bgcolor: 'background.paper' }}>\r\n                      {groupedDays[dayOfWeek].map((reservation: any, j: any) => (\r\n                        <ListItem\r\n                          key={j}\r\n                          tw=\"border-b-2\"\r\n                          secondaryAction={\r\n                            <>\r\n                              {reservation.reservation_status === 'reserved' && (\r\n                                <IconButton\r\n                                  onClick={() => cancelVisitMutation.mutate({ id: reservation.id })}\r\n                                >\r\n                                  <CancelIcon />\r\n                                </IconButton>\r\n                              )}\r\n                              <IconButton\r\n                                onClick={() => removeVisitMutation.mutate({ id: reservation.id })}\r\n                              >\r\n                                <DeleteForeverIcon />\r\n                              </IconButton>\r\n                            </>\r\n                          }\r\n                        >\r\n                          <ListItemText\r\n                            secondaryTypographyProps={{ color: 'red' }}\r\n                            primary={\r\n                              moment(reservation.datetime_start).format('DD.MM.YYYY').toString() +\r\n                              ' - ' +\r\n                              moment(reservation.datetime_start).format('HH:mm') +\r\n                              '-' +\r\n                              moment(reservation.datetime_end).format('HH:mm')\r\n                            }\r\n                            secondary={\r\n                              reservation?.user\r\n                                ? '' +\r\n                                  reservation?.user.firstName +\r\n                                  ' ' +\r\n                                  reservation?.user.lastName +\r\n                                  ' - ' +\r\n                                  reservation?.user.phone +\r\n                                  ' - ' +\r\n                                  reservation?.user.email +\r\n                                  ' - ' +\r\n                                  moment(reservation?.timestamp).format('DD.MM.YYYY') +\r\n                                  ' - ' +\r\n                                  moment(reservation?.timestamp).format('HH:mm')\r\n                                : ''\r\n                            }\r\n                          />\r\n                        </ListItem>\r\n                      ))}\r\n                    </List>\r\n                  </AccordionDetails>\r\n                </Accordion>\r\n              )\r\n            )\r\n          })}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SpecialistVisits\r\n","import React, { useState } from 'react'\r\nimport Navbar from '../components/Navbar'\r\nimport DatePicker from '@mui/lab/DatePicker'\r\nimport TextField from '@mui/material/TextField'\r\n/** @jsxImportSource @emotion/react */\r\nimport 'twin.macro'\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns'\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider'\r\nimport { pl } from 'date-fns/locale'\r\n\r\nimport { Alert, AlertColor, Button, Snackbar } from '@mui/material'\r\nimport moment from 'moment'\r\nimport { useMutation, useQueryClient } from 'react-query'\r\nimport axios from 'axios'\r\nimport { removeReservationFromToRequest } from '../models/removeReservationFromToRequest'\r\n\r\nfunction SpecialistRemoveVisits() {\r\n  const queryClient = useQueryClient()\r\n  const [open, setOpen] = useState(false)\r\n  const [severity, setSeverity] = useState<AlertColor>('success')\r\n  const [message, setMessage] = useState('')\r\n  const [startDateValue, setStartDateValue] = useState<Date | null>(null)\r\n  const [endDateValue, setEndDateValue] = useState<Date | null>(null)\r\n  const [errorMessage, setErrorMessage] = useState<string>('')\r\n\r\n  const handleClose = () => {\r\n    setOpen(false)\r\n  }\r\n\r\n  const handleSubmit = () => {\r\n    if (!(startDateValue && endDateValue)) {\r\n      setErrorMessage('Wszystkie pola muszą być wybrane.')\r\n      return\r\n    }\r\n    if (moment(startDateValue) >= moment(endDateValue)) {\r\n      setErrorMessage('Data początku usuwania wizyt musi być późniejsza od daty końca wizyt.')\r\n      return\r\n    }\r\n    setErrorMessage('')\r\n    removeVisitsFromToMutation.mutate({\r\n      date_start: startDateValue,\r\n      date_end: endDateValue,\r\n    })\r\n  }\r\n  const removeVisitsFromToMutation = useMutation<any, any, removeReservationFromToRequest>(\r\n    (removeData) => {\r\n      return axios.post('/delete-reservation-from-to', removeData)\r\n    },\r\n    {\r\n      onSuccess: ({ data }) => {\r\n        queryClient.invalidateQueries('specialist-visits')\r\n        console.log(JSON.stringify(data))\r\n        setSeverity('success')\r\n        setOpen(true)\r\n        setMessage(data)\r\n      },\r\n      onError: (err) => {\r\n        console.log(err.response.data.msg)\r\n        setSeverity('error')\r\n        setOpen(true)\r\n        setMessage(err.response.data.msg)\r\n      },\r\n    },\r\n  )\r\n\r\n  return (\r\n    <div>\r\n      <Navbar />\r\n      <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n        <Alert onClose={handleClose} severity={severity} sx={{ width: '100%' }}>\r\n          {message}\r\n        </Alert>\r\n      </Snackbar>\r\n      <p tw=\"text-center text-3xl font-bold pb-10\">Usuwanie wizyt</p>\r\n      <div tw=\"pb-2 ml-2 mr-2\">\r\n        <LocalizationProvider dateAdapter={AdapterDateFns} locale={pl}>\r\n          <div tw=\"grid grid-cols-2  pl-4 pr-4 pt-2 pb-2 \">\r\n            <div tw=\"pr-1 text-right\">\r\n              <DatePicker\r\n                label=\"Data początkowa\"\r\n                value={startDateValue}\r\n                onChange={(newValue) => {\r\n                  setStartDateValue(newValue)\r\n                }}\r\n                renderInput={(params) => <TextField {...params} />}\r\n              />\r\n            </div>\r\n            <div tw=\"pl-1 text-left\">\r\n              <DatePicker\r\n                label=\"Data końcowa\"\r\n                value={endDateValue}\r\n                onChange={(newValue) => {\r\n                  setEndDateValue(newValue)\r\n                }}\r\n                renderInput={(params) => <TextField {...params} />}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div tw=\"text-center\">\r\n            {errorMessage && <p tw=\"text-red-600\">{errorMessage}</p>}\r\n            <Button onClick={handleSubmit} tw=\"mt-5 \" variant=\"contained\">\r\n              Usuń wizyty\r\n            </Button>\r\n          </div>\r\n        </LocalizationProvider>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SpecialistRemoveVisits\r\n","import React, { useContext, useState } from 'react'\r\nimport Navbar from '../components/Navbar'\r\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever'\r\n/** @jsxImportSource @emotion/react */\r\nimport 'twin.macro'\r\nimport { useMutation, useQuery, useQueryClient } from 'react-query'\r\nimport axios from 'axios'\r\nimport { specialistReservationsListResponse } from '../models/specialistReservationsResponse'\r\nimport moment from 'moment'\r\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight'\r\nimport ChevronLeftIcon from '@mui/icons-material/ChevronLeft'\r\nimport CancelIcon from '@mui/icons-material/Cancel'\r\nimport {\r\n  Accordion,\r\n  AccordionDetails,\r\n  AccordionSummary,\r\n  Alert,\r\n  AlertColor,\r\n  IconButton,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  Snackbar,\r\n  Typography,\r\n} from '@mui/material'\r\nimport ControlPointIcon from '@mui/icons-material/ControlPoint'\r\nimport RemoveIcon from '@mui/icons-material/Remove'\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore'\r\nimport { removeReservationRequest } from '../models/removeReservation'\r\nimport { getDay } from '../utils/getDay'\r\nimport { cancelReservationRequest } from '../models/cancelReservationRequest'\r\nimport UserContext from '../common/UserContext'\r\n\r\nfunction UserSpecialistVisits(props: any) {\r\n  const userContext = useContext(UserContext)\r\n  console.log('HERE: ' + props.match.params.id)\r\n  const queryClient = useQueryClient()\r\n  const [weekOffset, setWeekOffset] = useState(0)\r\n  const [groupedDays, setGroupedDays] = useState<any>(null)\r\n  const [groupedDaysKeys, setGroupedDaysKeys] = useState<any>([])\r\n  const [open, setOpen] = useState(false)\r\n  const [severity, setSeverity] = useState<AlertColor>('success')\r\n  const [message, setMessage] = useState('')\r\n  const handleClose = () => {\r\n    setOpen(false)\r\n  }\r\n  const { isFetching, isRefetching } = useQuery(\r\n    [`specialist-visits`, { offset: weekOffset, id: props.match.params.id }],\r\n    () =>\r\n      axios\r\n        .get<specialistReservationsListResponse>(\r\n          `/week-reservation/${props.match.params.id}/${weekOffset}`,\r\n        )\r\n        .then((res) => {\r\n          const grouped: any = {}\r\n\r\n          for (let i = 1; i < 7; i++) {\r\n            grouped[getDay(i)] = []\r\n          }\r\n          grouped['Niedziela'] = []\r\n          res.data.forEach((e) => {\r\n            grouped[getDay(moment(e.datetime_start).day())] = [\r\n              ...grouped[getDay(moment(e.datetime_start).day())],\r\n              e,\r\n            ]\r\n          })\r\n          setGroupedDays(grouped)\r\n          setGroupedDaysKeys(Array.from(Object.keys(grouped)))\r\n\r\n          return grouped\r\n        }),\r\n    { refetchInterval: 50000 },\r\n  )\r\n\r\n  const reserveVisitMutation = useMutation<any, any, removeReservationRequest>(\r\n    (reserveData) => {\r\n      return axios.put('/reserve', reserveData)\r\n    },\r\n    {\r\n      onSuccess: ({ data }) => {\r\n        queryClient.invalidateQueries('specialist-visits')\r\n        console.log(JSON.stringify(data))\r\n        setSeverity('success')\r\n        setOpen(true)\r\n        setMessage(data)\r\n      },\r\n      onError: (err) => {\r\n        console.log(err.response.data.msg)\r\n        setSeverity('error')\r\n        setOpen(true)\r\n        setMessage(err.response.data.msg)\r\n      },\r\n    },\r\n  )\r\n  const cancelVisitMutation = useMutation<any, any, cancelReservationRequest>(\r\n    (removeData) => {\r\n      return axios.put('/cancel-user-reservation', removeData)\r\n    },\r\n    {\r\n      onSuccess: ({ data }) => {\r\n        queryClient.invalidateQueries('specialist-visits')\r\n        console.log(JSON.stringify(data))\r\n        setSeverity('success')\r\n        setOpen(true)\r\n        setMessage(data)\r\n      },\r\n      onError: (err) => {\r\n        console.log(err.response.data.msg)\r\n        setSeverity('error')\r\n        setOpen(true)\r\n        setMessage(err.response.data.msg)\r\n      },\r\n    },\r\n  )\r\n\r\n  //TODO: eliminate jumping title\r\n  return (\r\n    <div>\r\n      <Navbar />\r\n      <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n        <Alert onClose={handleClose} severity={severity} sx={{ width: '100%' }}>\r\n          {message}\r\n        </Alert>\r\n      </Snackbar>\r\n\r\n      <div tw=\"text-center flex justify-center items-center\">\r\n        {weekOffset > 0 && (\r\n          <IconButton onClick={() => setWeekOffset(weekOffset - 1)}>\r\n            <ChevronLeftIcon />\r\n          </IconButton>\r\n        )}\r\n        <p tw=\"text-center text-3xl font-bold\">Rezerwacje - widok użytkownika</p>\r\n        <IconButton onClick={() => setWeekOffset(weekOffset + 1)}>\r\n          <ChevronRightIcon />\r\n        </IconButton>\r\n      </div>\r\n\r\n      <div tw=\"max-w-xl m-auto mt-5\">\r\n        {(!isFetching || isRefetching) &&\r\n          groupedDaysKeys?.length > 0 &&\r\n          groupedDaysKeys.map((dayOfWeek: any, i: any) => {\r\n            return (\r\n              groupedDays[dayOfWeek]?.length > 0 && (\r\n                <Accordion key={i} tw=\"m-auto shadow-md mb-1 mr-5 ml-5\">\r\n                  <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n                    <div>\r\n                      <Typography sx={{ fontWeight: 'bold', fontSize: 20 }}>\r\n                        {dayOfWeek +\r\n                          ' - ' +\r\n                          moment(groupedDays[dayOfWeek][0]?.datetime_start)\r\n                            .format('DD.MM.YYYY')\r\n                            .toString()}\r\n                      </Typography>\r\n                      {groupedDays[dayOfWeek].filter((d: any) => d.reservation_status === 'free')\r\n                        .length > 0 && (\r\n                        <Typography sx={{ color: 'green' }}>\r\n                          Wolne wizyty{': '}\r\n                          {\r\n                            groupedDays[dayOfWeek].filter(\r\n                              (d: any) => d.reservation_status === 'free',\r\n                            ).length\r\n                          }\r\n                        </Typography>\r\n                      )}\r\n                      {groupedDays[dayOfWeek].filter(\r\n                        (d: any) => d.reservation_status === 'reserved',\r\n                      ).length > 0 && (\r\n                        <Typography sx={{ color: 'red' }}>\r\n                          Zarezerwowane wizyty{': '}\r\n                          {\r\n                            groupedDays[dayOfWeek].filter(\r\n                              (d: any) => d.reservation_status === 'reserved',\r\n                            ).length\r\n                          }{' '}\r\n                        </Typography>\r\n                      )}\r\n                      <Typography sx={{ color: 'blue' }}>\r\n                        Wszystkie wizyty: {groupedDays[dayOfWeek].length}{' '}\r\n                      </Typography>\r\n                    </div>\r\n                  </AccordionSummary>\r\n                  <AccordionDetails tw=\"mt-0\">\r\n                    <List sx={{ width: '100%', bgcolor: 'background.paper' }}>\r\n                      {groupedDays[dayOfWeek].map((reservation: any, j: any) => (\r\n                        <ListItem\r\n                          key={j}\r\n                          tw=\"border-b-2\"\r\n                          secondaryAction={\r\n                            <>\r\n                              {reservation.client_id === userContext.user.id ? (\r\n                                <IconButton\r\n                                  onClick={() => cancelVisitMutation.mutate({ id: reservation.id })}\r\n                                >\r\n                                  Anuluj\r\n                                  <CancelIcon />\r\n                                </IconButton>\r\n                              ) : !reservation.client_id ? (\r\n                                <IconButton\r\n                                  onClick={() =>\r\n                                    reserveVisitMutation.mutate({ id: reservation.id })\r\n                                  }\r\n                                >\r\n                                  Rezerwuj\r\n                                  <ControlPointIcon />\r\n                                </IconButton>\r\n                              ) : (\r\n                                'Zarezerwowane'\r\n                              )}\r\n                            </>\r\n                          }\r\n                        >\r\n                          <ListItemText\r\n                            secondaryTypographyProps={{ color: 'red' }}\r\n                            primary={\r\n                              moment(reservation.datetime_start).format('DD.MM.YYYY').toString() +\r\n                              ' - ' +\r\n                              moment(reservation.datetime_start).format('HH:mm') +\r\n                              '-' +\r\n                              moment(reservation.datetime_end).format('HH:mm')\r\n                            }\r\n                            secondary={\r\n                              reservation.client_id === userContext.user.id &&\r\n                              'Zarezerwowane przez ciebie'\r\n                            }\r\n                          />\r\n                        </ListItem>\r\n                      ))}\r\n                    </List>\r\n                  </AccordionDetails>\r\n                </Accordion>\r\n              )\r\n            )\r\n          })}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UserSpecialistVisits\r\n","import {\r\n  Alert,\r\n  AlertColor,\r\n  IconButton,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  Snackbar,\r\n} from '@mui/material'\r\nimport axios from 'axios'\r\nimport React, { useState } from 'react'\r\nimport { useMutation, useQuery, useQueryClient } from 'react-query'\r\n/** @jsxImportSource @emotion/react */\r\nimport 'twin.macro'\r\nimport Navbar from '../components/Navbar'\r\nimport CancelIcon from '@mui/icons-material/Cancel'\r\nimport { cancelReservationRequest } from '../models/cancelReservationRequest'\r\nimport { removeReservationRequest } from '../models/removeReservation'\r\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever'\r\nimport moment from 'moment'\r\n\r\nfunction UserReservations() {\r\n  const queryClient = useQueryClient()\r\n\r\n  const [open, setOpen] = useState(false)\r\n  const [severity, setSeverity] = useState<AlertColor>('success')\r\n  const [message, setMessage] = useState('')\r\n  const handleClose = () => {\r\n    setOpen(false)\r\n  }\r\n  const { data } = useQuery('all-user-reservations', () =>\r\n    axios.get<any>('/all-user-reservations').then((res) => {\r\n      console.log(JSON.stringify(res.data))\r\n      return res.data\r\n    }),\r\n  )\r\n  const cancelVisitMutation = useMutation<any, any, cancelReservationRequest>(\r\n    (removeData) => {\r\n      return axios.put('/cancel-user-reservation', removeData)\r\n    },\r\n    {\r\n      onSuccess: ({ data }) => {\r\n        queryClient.invalidateQueries('all-user-reservations')\r\n        console.log(JSON.stringify(data))\r\n        setSeverity('success')\r\n        setOpen(true)\r\n        setMessage(data)\r\n      },\r\n      onError: (err) => {\r\n        console.log(err.response.data.msg)\r\n        setSeverity('error')\r\n        setOpen(true)\r\n        setMessage(err.response.data.msg)\r\n      },\r\n    },\r\n  )\r\n\r\n  return (\r\n    <div>\r\n      <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n        <Alert onClose={handleClose} severity={severity} sx={{ width: '100%' }}>\r\n          {message}\r\n        </Alert>\r\n      </Snackbar>\r\n      <Navbar />\r\n      <p tw=\"text-center text-3xl font-bold pb-10\">Rezerwacje użytkownika</p>\r\n      <List tw=\"max-w-xl m-auto\" sx={{ width: '100%', bgcolor: 'background.paper' }}>\r\n        {data?.length === 0 && <p tw=\"text-center\">Aktualnie użytkownik nie posiada rezerwacji.</p>}\r\n        {data?.map((reservation: any, j: any) => (\r\n          <ListItem\r\n            key={j}\r\n            tw=\"border-b-2\"\r\n            secondaryAction={\r\n              <>\r\n                {reservation.reservation_status === 'reserved' && (\r\n                  <IconButton onClick={() => cancelVisitMutation.mutate({ id: reservation.id })}>\r\n                    <CancelIcon />\r\n                  </IconButton>\r\n                )}\r\n              </>\r\n            }\r\n          >\r\n            <ListItemText\r\n              secondaryTypographyProps={{ color: 'red' }}\r\n              primary={\r\n                moment(reservation.datetime_start).format('DD.MM.YYYY').toString() +\r\n                ' - ' +\r\n                moment(reservation.datetime_start).format('HH:mm') +\r\n                '-' +\r\n                moment(reservation.datetime_end).format('HH:mm') +\r\n                '  -  ' +\r\n                reservation.user.firstName +\r\n                ' ' +\r\n                reservation.user.lastName\r\n              }\r\n              secondary={\r\n                reservation?.user\r\n                  ? '' +\r\n                    'Zarezerwowane dnia ' +\r\n                    ' ' +\r\n                    moment(reservation?.timestamp).format('DD.MM.YYYY') +\r\n                    ' o godzinie ' +\r\n                    moment(reservation?.timestamp).format('HH:mm')\r\n                  : ''\r\n              }\r\n            />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UserReservations\r\n","import React from 'react'\r\nimport { Route, Router, Switch } from 'react-router'\r\n\r\nimport Home from '../pages/Home'\r\nimport Login from '../pages/Login'\r\nimport Logout from '../pages/Logout'\r\nimport Owner from '../pages/Owner'\r\nimport Register from '../pages/Register'\r\nimport Specialists from '../pages/Specialists'\r\nimport Unauthorized from '../pages/Unauthorized'\r\nimport SpecialistAddVisit from '../pages/SpecialistAddVisit'\r\n\r\nimport SpecialistsList from '../pages/SpecialistsList'\r\nimport OwnerAddSpecialist from '../pages/OwnerAddSpecialist'\r\nimport SpecialistVisits from '../pages/SpecialistVisits'\r\nimport SpecialistRemoveVisits from '../pages/SpecialistRemoveVisits'\r\nimport UserSpecialistVisits from '../pages/UserSpecialistVisits'\r\nimport UserReservations from '../pages/UserReservations'\r\nimport { HashRouter } from 'react-router-dom'\r\n\r\nconst Navigation = () => {\r\n  return (\r\n    <HashRouter>\r\n      <Switch>\r\n        {/* common */}\r\n        <Route path=\"/\" component={Home} exact />\r\n        <Route path=\"/login\" component={Login} exact />\r\n        <Route path=\"/register\" component={Register} exact />\r\n        <Route path=\"/unauthorized\" component={Unauthorized} exact />\r\n        {/* user */}\r\n        <Route path=\"/specialists\" component={Specialists} exact />\r\n        <Route path=\"/specialist-visits/:id\" component={UserSpecialistVisits} exact />\r\n        <Route path=\"/logout\" component={Logout} exact />\r\n        <Route path=\"/user-reservations\" component={UserReservations} exact />\r\n        {/* specialists */}\r\n        <Route path=\"/add-visit\" component={SpecialistAddVisit} exact />\r\n        <Route path=\"/show-visits\" component={SpecialistVisits} exact />\r\n        <Route path=\"/specialists-list\" component={SpecialistsList} exact />\r\n        <Route path=\"/delete-visits\" component={SpecialistRemoveVisits} exact />\r\n        {/* owner */}\r\n        <Route path=\"/owner\" component={Owner} exact />\r\n\r\n        <Route path=\"/specialist-add\" component={OwnerAddSpecialist} exact />\r\n      </Switch>\r\n    </HashRouter>\r\n  )\r\n}\r\n\r\nexport default Navigation\r\n","import axios from 'axios'\r\nimport React, { useContext } from 'react'\r\nimport { useQuery } from 'react-query'\r\nimport UserContext from '../common/UserContext'\r\nimport { userByTokenResponse } from '../models/userByTokenResponse'\r\n\r\nconst UserContextUpdate = () => {\r\n  const userContext = useContext(UserContext)\r\n  const token = localStorage.getItem('token')\r\n\r\n  useQuery(\r\n    'context-fill',\r\n    () =>\r\n      axios.get<userByTokenResponse>('/user-by-token').then((res) => {\r\n        if (res && res?.data) {\r\n          if (token) {\r\n            userContext.setUser(res.data)\r\n          }\r\n        }\r\n      }),\r\n    { enabled: !!token },\r\n  )\r\n  return <div />\r\n}\r\n\r\nexport default UserContextUpdate\r\n","import React, { useState } from 'react'\nimport 'tailwindcss/tailwind.css'\nimport { QueryClient, QueryClientProvider } from 'react-query'\n\nimport Navigation from './components/Navigation'\nimport UserContext, { initData } from './common/UserContext'\nimport { ConfigProvider } from 'react-avatar'\nimport UserContextUpdate from './components/UserContextUpdate'\nimport { BrowserRouter } from 'react-router-dom'\nimport { GlobalStyles } from 'twin.macro'\nconst queryClient = new QueryClient()\n\n\nfunction App() {\n  const [user, setUser] = useState(initData)\n  return (\n    <BrowserRouter>\n      <QueryClientProvider client={queryClient}>\n        <ConfigProvider colors={['red', 'green']}>\n          <main>\n            \n            <UserContext.Provider value={{ user, setUser }}>\n              <UserContextUpdate />\n              <GlobalStyles />\n              <Navigation />\n            </UserContext.Provider>\n            \n          </main>\n        </ConfigProvider>\n      </QueryClientProvider>\n    </BrowserRouter>\n  )\n}\n\nexport default App\n","import axios, { AxiosRequestConfig } from 'axios'\r\n\r\naxios.defaults.baseURL = 'https://projektkam.pl/'\r\n\r\naxios.interceptors.response.use(\r\n  function (response) {\r\n    return response\r\n  },\r\n  function (error) {\r\n    if (error && error.request && error.request.status === 403) {\r\n      window.location.href = 'https://projektkam.pl/unauthorized'\r\n    }\r\n    return Promise.reject(error)\r\n  },\r\n)\r\n\r\naxios.interceptors.request.use(function (config: AxiosRequestConfig) {\r\n  const token = localStorage.getItem('token')\r\n  if (config && config.headers) config.headers['Authorization'] = token || ''\r\n  return config\r\n})\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport { BrowserRouter } from 'react-router-dom'\nimport './utils/axiosInterceptor'\nimport 'tailwindcss/dist/base.min.css'\nReactDOM.render(\n  // <React.StrictMode>\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  // </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}